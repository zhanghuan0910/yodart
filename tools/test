#!/usr/bin/env bash
set -e -o pipefail

help="
Usage:
  -l                  run tests on local machine
  -p <pattern>        test file pattern, defaults to '$pattern'
  --reporter <name>   test result reporter, no reporter by default
  -s                  Select which device to be installed on if multiple devices presents.

Example:
  $ ./tools/test --reporter tap-nyan --pattern '**/*.test.js'
"

patternPrefix='/data/workspace/test/'
pattern="**/*.test.js"
reporter="cat"
coverage=""
timeout=""
local="NO"
sn=""
while [ $# -gt 0 ]; do
  case "$1" in
    -p)
      pattern="$2"
      shift
      ;;
    --reporter)
      reporter="./node_modules/.bin/$2"
      shift
      ;;
    -l)
      local="YES"
      ;;
    -s)
      sn="$2"
      shift
      ;;
    --help)
      printf "$help"
      exit
      ;;
    -h)
      printf "$help"
      exit
      ;;
    --coverage)
      coverage="--coverage $2"
      shift
      ;;
    --timeout)
      timeout="--timeout $2"
      shift
      ;;
    --*)
      echo "Illegal option $1"
      ;;
  esac
  shift $(( $# > 0 ? 1 : 0 ))
done

if test "$local" = "YES"; then
  export NODE_PATH="$(pwd)/packages"

  patternPrefix="$(pwd)/test/"
  scripts="$patternPrefix$pattern"

  cmd='iotjs ./node_modules/tape/bin/tape.js '
else
  scripts="
export BLUETOOTH_CHANNEL_PREFIX=/tmp;
export NODE_ENV=unittest;
iotjs /usr/lib/node_modules/tape/bin/tape.js '$patternPrefix$pattern'
"
  if test "$sn" != ""; then
    cmd="adb -s $sn shell"
  else
    cmd="adb shell"
  fi
fi

$cmd $scripts $coverage $timeout | $reporter
